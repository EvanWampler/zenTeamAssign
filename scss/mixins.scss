@use 'variables' as *;

// mixins to take care of repeated patterns.
@mixin set-body-font(){
  font-family: $bodyFont;
  font-size: $copySize;
}
@mixin uppercase($color: $darkBrown) {
  font-weight: 300;
  letter-spacing: 2px;
  text-transform: uppercase;
  color: $color;
}
@mixin coloredBackground{
    background-color: #473328;
    color:$sageGreen;
}
@mixin set-flex($direction: column, $wrap: wrap) {
  display: flex;
  flex-flow: $direction $wrap;
}
@mixin body-color($color:$bodyColor){
  background-color: $color;
}
@mixin colorVaried($color:$bodyAltCol,$size:22px){
  background-color: $color;
  font-size: $size;
  color:$whiteText;
}
@mixin border($width:2px,$decor:solid){
  border-radius: 30px;
  border-width: $width;
  border:#473328 $decor;
}

// begin implementing generic rulesets
body{
  @include set-flex($direction:column, $wrap:wrap);
  @include set-body-font();
  color:$darkBrown;
}

header{
  @include body-color($color:$bodyColor);
  @include border($width:2px,$decor:solid);
}

.summary{
  @include border(2px, solid);
  color:$darkBrown;
}

.preamble {
  @include coloredBackground;
  @include border($width:2px,$decor:solid);
}

.explanation, .requirements, .zen-resources  {
  @include border($width:2px,$decor:solid);
  background-color: $sageGreen;
}

.participation {
  @include uppercase($color: $darkBrown);
  padding: 2px;
  margin: 2px;
}

.participation, .design-selection {
  @include border($width:2px,$decor:solid);
  @include colorVaried($color:$bodyAltCol,$size:22px);
}

.benefits, .design-archives {
  @include border($width:2px,$decor:solid);
  @include body-color($color:$bodyColor);
}

.doghouse {
  /*background-image: url("gravel.jpg");*/
  align-items: center;
  animation: slide 2s 2;
  }

  @keyframes slide {
    from {
        margin-left: 100%;
        width: 300%;
      }
    
      to {
        margin-left: 0%;
        width: 100%;
      }
}

.paw {
  animation: wiggle linear infinite;
}

@keyframes wiggle {
  0%, 7% { transform: rotateY(0);}
  15% { transform: rotateY(-15deg);}
  20% { transform: rotateY(10deg);}
  25% { transform: rotateY(-10deg);}
  30% { transform: rotateY(6deg);}
  35% { transform: rotateY(-4deg);}
  40%, 100% {  transform: rotateY(0);}
}